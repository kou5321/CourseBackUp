C51 COMPILER V9.01   MAIN                                                                  12/22/2016 10:11:27 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg51.h>
   2          sbit fx_buzzer=P3^7; //蜂鸣器音乐输出，可根据需要自行修改 
   3          
   4          sbit music_1 = P2^0;    //第一首音乐
   5          sbit music_2 = P2^1;    //第二首音乐
   6          sbit music_3 = P2^2;    //第二首音乐
   7          
   8          
   9          
  10          unsigned int tone; //简谱音调计数 
  11          
  12          unsigned char fx_timeh,fx_timel,music,speed; //fx_timeh:TH0初值,fx_timel:TL0初值; music =1播放，=0停止 
  13          
  14          unsigned char code fx_tone0[]={ //音调对应定时器初值 
  15          0xFC,0x8E, 0xFC,0xED, 0xFD,0x43, //中音 
  16          0xFD,0x6A, 0xFD,0xB3, 0xFD,0xF3, 0xFE,0x2D, 
  17          0xFE,0x47, 0xFE,0x76, 0xFE,0xA1, //高音 
  18          0xFE,0xC7, 0xFE,0xD9, 0xFE,0xF9, 0xFF,0x16 
  19          }; 
  20          
  21          unsigned char code songbie[]={//送别 
  22          0x54,0x32,0x52,0x88,0x64,0x84,0x58,0x54,0x12,0x22,0x34,0x22,0x12,0x2c,0x04, 
  23          0x54,0x32,0x52,0x86,0x72,0x64,0x84,0x58,0x54,0x22,0x32,0x46,0x72,0x1c, 
  24          0x64,0x8c,0x74,0x62,0x72,0x88,0x62,0x72,0x82,0x62,0x52,0x32,0x12,0x2f, 
  25          0x54,0x32,0x52,0x86,0x72,0x64,0x84,0x58,0x54,0x22,0x32,0x46,0x72,0x1c, 
  26          0x64,0x8c,0x74,0x62,0x72,0x88,0x62,0x72,0x82,0x62,0x52,0x32,0x12,0x2f, 
  27          0x54,0x32,0x52,0x86,0x72,0x64,0x84,0x58,0x54,0x22,0x32,0x46,0x72,0x1c, 
  28          0xff}; 
  29          
  30          unsigned char code qnzl[]={ //千年之恋 
  31          0x12,0x22,0x34,0x84,0x74,0x54,0x38,0x42,0x32,0x22, 
  32          0x42,0x34,0x84,0x72,0x82,0x94,0xA8,0x08,0x32,0x31, 
  33          0x21,0x32,0x52,0x32,0x31,0x21,0x32,0x62,0x32,0x31, 
  34          0x21,0x32,0x82,0x71,0x81,0x71,0x51,0x32,0x22,0x32, 
  35          0x31,0x21,0x32,0x52,0x32,0x31,0x21,0x32,0x62,0x32, 
  36          0x31,0x21,0x32,0x83,0x82,0x71,0x72,0x02,0x63,0xA1, 
  37          0xA2,0x62,0x92,0x82,0x52,0x31,0x51,0x63,0x51,0x63, 
  38          0x51,0x63,0x51,0x62,0x82,0x7C,0x02,0x61,0x71,0x82, 
  39          0x71,0x62,0xA2,0x71,0x76,0x61,0x71,0x82,0x71,0x62, 
  40          0x52,0x31,0x36,0x61,0x71,0x82,0x71,0x62,0xA3,0x73, 
  41          0x62,0x53,0x42,0x63,0x83,0x83,0x91,0x91,0x61,0x71, 
  42          0x82,0x71,0x62,0x0A2,0x71,0x76,0x61,0x71,0x82,0x71, 
  43          0x62,0x52,0x31,0x36,0x61,0x71,0x82,0x71,0x62,0xA3, 
  44          0x73,0x62,0x53,0x42,0x82,0x88,0x02,0x74,0x93,0x89, 
  45          0xff}; 
  46          
  47          unsigned char code laohu[]={                  //两只老虎
  48          0x14,0x14,0x24,0x34,0x14,0x14,0x24,0x34,0x14,
  49          0x34,0x44,0x58,0x34,0x44,0x58,
  50          0x53,0x61,0x53,0x41,0x34,0x14,
  51          0x53,0x61,0x53,0x41,0x34,0x14,
  52          0x14,0x54,0x18,
  53          0x14,0x54,0x18,
  54          0xFF};
  55          
C51 COMPILER V9.01   MAIN                                                                  12/22/2016 10:11:27 PAGE 2   

  56          unsigned char keyValue;    //存储按下的键值
  57          
  58          void init() //初始化函数 
  59          { 
  60   1              EA=1;//开总中断 
  61   1              TMOD=0x10;//定时器0工作在方式1 
  62   1              TH1=0; 
  63   1              TL1=0; 
  64   1              ET1=1; 
  65   1              music=1; //默认播放 
  66   1              tone=0; 
  67   1              speed=20;       //播放速度
  68   1      } 
  69          
  70          
  71          void fx_delay(unsigned char i) //音长延时函数 
  72          { 
  73   1              unsigned int j,k; 
  74   1              for(i;i>0;i--) 
  75   1                      for(k=speed;k>0;k--) 
  76   1                              for(j=625;j>0;j--); 
  77   1      } 
  78          
  79          
  80          void play(unsigned char *temp) //音阶播放函数 
  81          { 
  82   1              if(speed<1) speed=1; //速度范围设定 
  83   1              if(speed>60) speed=60; 
  84   1              while(1) 
  85   1              { 
  86   2                      if(!music) break; 
  87   2              
  88   2                      if(music==2) {tone=0;music=1;break;} //配合按钮换歌 
  89   2                      if(temp[tone]==0xff){tone=0;break;}; 
  90   2                      if(temp[tone]/16!=0) //取高4位的音阶判断 
  91   2                      { 
  92   3                              fx_timeh=fx_tone0[temp[tone]/16*2-2]; 
  93   3                              fx_timel=fx_tone0[temp[tone]/16*2-1]; 
  94   3                              TR1=1; 
  95   3                      } 
  96   2                      fx_delay(temp[tone]%16); //取数的低4位 
  97   2                      TR1=0; 
  98   2                      tone++; 
  99   2              } 
 100   1              TR1=0; 
 101   1      } 
 102          
 103          
 104          void fx_tone() interrupt 3 //用于产生各种音调 
 105          { 
 106   1              TH1=fx_timeh; 
 107   1              TL1=fx_timel; 
 108   1              fx_buzzer=~fx_buzzer; 
 109   1      } 
 110          
 111          void Delay10ms(unsigned int n)  //延时函数，延时10ms
 112          {  
 113   1          unsigned char a, b;  
 114   1          for (; n>0; n--)  
 115   1          {  
 116   2              for (b=38; b>0; b--)  
 117   2              {  
C51 COMPILER V9.01   MAIN                                                                  12/22/2016 10:11:27 PAGE 3   

 118   3                  for (a=130; a>0; a--);  
 119   3              }  
 120   2          }      
 121   1      }  
 122          
 123          
 124          void EX0_INT(void) interrupt 0   //外部INT0
 125          {
 126   1              if(tone !=0 ) music = 2;
 127   1      
 128   1      
 129   1              if(music_1 == 0)
 130   1                      {
 131   2                              Delay10ms(1);
 132   2                              if(music_1 == 0)
 133   2                              {
 134   3                                      while(music_1 == 0);    //等待松开按钮
 135   3                                      keyValue = 1; //播放第一首音乐-送别
 136   3                              }
 137   2                      }
 138   1                      
 139   1                      if(music_2 == 0)
 140   1                      {
 141   2                              Delay10ms(1);
 142   2                              if(music_2 == 0)
 143   2                              {
 144   3                                      while(music_2 == 0);    //等待松开按钮
 145   3                                      keyValue = 2; //播放第二首音乐
 146   3                              }
 147   2                      }
 148   1                      
 149   1                      if(music_3 == 0)
 150   1                      {
 151   2                              Delay10ms(1);
 152   2                              if(music_3 == 0)
 153   2                              {
 154   3                                      while(music_3 == 0);    //等待松开按钮
 155   3                                      keyValue = 3; //播放第三首音乐
 156   3                              }
 157   2                              
 158   2                      }
 159   1      
 160   1      }
 161          
 162          //主函数
 163          void main()
 164          {
 165   1              init(); //初始化函数 
 166   1              //play(song1); //音阶播放函数 
 167   1      
 168   1              IT0=1;          //外部中断INT0位下降沿触发
 169   1              EX0=1;          //开INT0中断允许
 170   1              
 171   1      
 172   1              EA=1;
 173   1      
 174   1              while(1)
 175   1              {
 176   2                      if(keyValue == 1)
 177   2                      {
 178   3                              play(songbie); //播放第一首音乐-送别
 179   3                      }else if(keyValue == 2){
C51 COMPILER V9.01   MAIN                                                                  12/22/2016 10:11:27 PAGE 4   

 180   3                              play(qnzl); //播放第二首音乐
 181   3                      }else if(keyValue == 3){
 182   3                              play(laohu); //播放第三首音乐
 183   3                      }
 184   2                              
 185   2              }
 186   1      }
 187          
 188          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    413    ----
   CONSTANT SIZE    =    289    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
